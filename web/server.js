/* Foody web server — server.js
 * Start: node server.js
 * Railway picks PORT from env automatically.
 */
const express = require('express');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 8080;

// Trust proxy (Railway/Nginx)
app.set('trust proxy', true);

// Basic health
app.get(['/health', '/healthz', '/'], (req, res, next) => {
  if (req.path === '/' ) return next(); // let static serve index if exists
  res.type('text/plain').send('OK');
});

/**
 * /config.js — exposes window.foodyApi and autoloads merchant patch (unless disabled).
 * Env:
 *   FOODY_API            -> backend base URL (default: prod)
 *   FOODY_PATCH_DISABLE  -> '1' to disable autoloading the patch
 */
app.get('/config.js', (req, res) => {
  const api = process.env.FOODY_API || 'https://foodyback-production.up.railway.app';
  const disabled = process.env.FOODY_PATCH_DISABLE === '1';
  res.set('Cache-Control', 'no-store'); // always fresh
  res.type('application/javascript').send(`
    // Generated by server.js
    window.foodyApi='${api}';
    ${disabled ? '' : `(()=>{try{
      if (location && location.pathname && location.pathname.includes('/web/merchant')) {
        var s=document.createElement('script');
        s.src='/web/merchant/assets/patches/foody_merchant_pack_20250816.js';
        s.defer=true;
        document.head.appendChild(s);
      }
    }catch(e){console.warn('foody config autoload error',e);}})();`}
  `);
});

// Static files served from ./web (so /web/... maps to ./web/... on disk)
const staticDir = path.join(__dirname, 'web');
app.use(express.static(staticDir, {
  extensions: ['html'],
  setHeaders: (res, filePath) => {
    // Avoid caching HTML files; allow caching assets
    if (filePath.endsWith('.html')) {
      res.setHeader('Cache-Control', 'no-store');
    }
  }
}));

/**
 * SPA fallbacks for deep links:
 * /web/merchant and /web/merchant/* -> ./web/merchant/index.html
 * /web/buyer    and /web/buyer/*    -> ./web/buyer/index.html
 */
function serveIfExists(file) {
  return (req, res, next) => {
    const full = path.join(__dirname, file);
    res.sendFile(full, err => err ? next() : undefined);
  };
}
app.get(['/web/merchant', '/web/merchant/*'], serveIfExists('web/merchant/index.html'));
app.get(['/web/buyer', '/web/buyer/*'], serveIfExists('web/buyer/index.html'));

// 404 fallback — try serve root index.html if exists (optional)
app.use((req, res, next) => {
  const idx = path.join(staticDir, 'index.html');
  res.sendFile(idx, err => {
    if (err) res.status(404).type('text/plain').send('Not Found');
  });
});

app.listen(PORT, () => {
  console.log(`[Foody web] listening on :${PORT}`);
  console.log(`FOODY_API: ${process.env.FOODY_API || 'https://foodyback-production.up.railway.app'}`);
  if (process.env.FOODY_PATCH_DISABLE === '1') {
    console.log('Autoload patch is DISABLED (FOODY_PATCH_DISABLE=1)');
  }
});
